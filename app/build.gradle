plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk Versions.COMPILE_SDK_VERSION

    defaultConfig {
        applicationId "com.jetpackcompose.app"
        minSdk Versions.MIN_SDK_VERSION
        targetSdk Versions.TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.10'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(path: ":domain")

    implementation(Libs.APP_COMPAT)
    implementation(Libs.MATERIAL)

    //Test
    testImplementation(Libs.JUNIT)
    testImplementation(Libs.TEST_CORE)
    testImplementation(Libs.MOCKITO)
    androidTestImplementation(Libs.EXT_TEST_JUNIT)
    androidTestImplementation(Libs.ESPRESSO)
    androidTestImplementation(Libs.COMPOSE_JUNIT)

    //Jetpack compose
    implementation(Libs.ACTIVITY_COMPOSE)
    implementation(Libs.COMPOSE)
    implementation(Libs.COMPOSE_MATERIAL)
    implementation(Libs.COMPOSE_UI_TOOLING_PREVIEW)
    implementation(Libs.NAVIGATION_COMPOSE)
    implementation(Libs.VIEW_MODEL_COMPOSE)
    debugImplementation(Libs.COMPOSE_UI_TOOLING)

    //Retrofit
    implementation(Libs.RETROFIT)
    implementation(Libs.RETROFIT_CONVERTER)

    //Hilt
    implementation(Libs.HILT)
    kapt(Libs.DAGGER_HILT_COMPILER)
    kapt(Libs.HILT_COMPILER)
    implementation(Libs.HILT_NAVIGATION_COMPOSE)
    implementation(Libs.HILT_VIEW_MODEL)

    //KTX
    implementation(Libs.CORE_KTX)
    implementation(Libs.FRAGMENT_KTX)
    implementation(Libs.LIFE_CYCLE_RUNTIME_KTX)
    implementation(Libs.VIEW_MODEL_KTX)
    implementation(Libs.LIVE_DATA_KTX)

    //Coil
    implementation(Libs.COIL)
}

kapt {
    correctErrorTypes true
}